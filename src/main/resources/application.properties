#spring.profiles.active=dev
#spring.profiles.active=qa

## Server Properties
server.address=0.0.0.0
server.port=7777
spring.application.name=oni-server


# Connection url for the database "onidb"
spring.datasource.url = jdbc:mysql://localhost:3306/onidb?useSSL=false
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Username and password
spring.datasource.username = root
spring.datasource.password = root123

# Show or not log for each sql query
spring.jpa.show-sql = false
spring.jpa.generate-ddl=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# drop n create table, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql = true

#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false



# Logging level properties
logging.level.root=INFO
logging.level.com.oni.server=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.file.name=${spring.application.name}.log

#Actuator endpoints configuration properties
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=

#data source
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/onidb
#spring.datasource.username=root
#spring.datasource.password=root123
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


#oni.server.cache.name="user-cache";
#oni.server.cache.name.my="my-cache";
#oni.server.cache.policy="LRU";
	
	
